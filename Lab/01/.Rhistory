library(sf)  # for working with spatial data
install.packages("sf")
library(sf)  # for working with spatial data
library(tigris)  # for getting US census data
install.packages("tigris")
install.packages("mapsf")
library(sf)  # for working with spatial data
library(tigris)  # for getting US census data
library(ggplot2)  # for plotting maps
library(mapsf)  # for plotting maps
library(dplyr)  # for doing join
wildfire_all = read.csv('../data/lab1/wildfire.csv')
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/UMich/Fall23/EAS648/Lab/01")
setwd("D:/UMich/Fall23/EAS648/Repo/Lab/01")
library(ggplot2)
library(sf)
library(tidyverse)
Boulder = st_load("Data/BoulderSocialMedia.shp")
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/UMich/Fall23/EAS648/Repo/Lab/01")
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/UMich/Fall23/EAS648/Repo/Lab/01")
library(ggplot2)
library(sf)
library(tidyverse)
library(tidyverse)
Boulder = st_load("Data/BoulderSocialMedia.shp")
Boulder = st_read("Data/BoulderSocialMedia.shp")
Boulder
ggplot() + geom_sf(data = Boulder, =NA, alpha = .2) + theme_bw()
ggplot() + geom_sf(data = Boulder, fill=NA, alpha = .2) + theme_bw()
ggplot() + geom_sf(data = Boulder, fill=NA, alpha = .2) + theme_bw()
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/UMich/Fall23/EAS648/Repo/Lab/01")
library(ggplot2)
library(sf)
library(tidyverse)
Boulder = st_read("Data/BoulderSocialMedia.shp")
Boulder
ggplot() + geom_sf(data = Boulder, fill=NA, alpha = .2) + theme_bw()
Boulder = st_read("Data/BoulderSocialMedia.shp")
Boulder
ggplot() + geom_sf(data = Boulder, fill=NA, alpha = .2) + theme_bw()
install.packages(c("evaluate", "fansi", "foreign", "htmltools", "lattice", "markdown", "rmarkdown", "rpart", "survival", "tinytex", "utf8", "vctrs", "withr"))
install.packages(c("evaluate", "fansi", "foreign", "htmltools", "lattice", "markdown", "rmarkdown", "rpart", "survival", "tinytex", "utf8", "vctrs", "withr"))
install.packages(c("evaluate", "fansi", "foreign", "htmltools", "lattice", "markdown", "rmarkdown", "rpart", "survival", "tinytex", "utf8", "vctrs", "withr"))
install.packages(c("evaluate", "fansi", "foreign", "htmltools", "lattice", "markdown", "rmarkdown", "rpart", "survival", "tinytex", "utf8", "vctrs", "withr"))
install.packages(c("evaluate", "fansi", "foreign", "htmltools", "lattice", "markdown", "rmarkdown", "rpart", "survival", "tinytex", "utf8", "vctrs", "withr"))
install.packages(c("evaluate", "fansi", "foreign", "htmltools", "lattice", "markdown", "rmarkdown", "rpart", "survival", "tinytex", "utf8", "vctrs", "withr"))
install.packages(c("evaluate", "fansi", "foreign", "htmltools", "lattice", "markdown", "rmarkdown", "rpart", "survival", "tinytex", "utf8", "vctrs", "withr"))
install.packages(c("evaluate", "fansi", "foreign", "htmltools", "lattice", "markdown", "rmarkdown", "rpart", "survival", "tinytex", "utf8", "vctrs", "withr"))
install.packages(c("evaluate", "fansi", "foreign", "htmltools", "lattice", "markdown", "rmarkdown", "rpart", "survival", "tinytex", "utf8", "vctrs", "withr"))
install.packages(c("evaluate", "fansi", "foreign", "htmltools", "lattice", "markdown", "rmarkdown", "rpart", "survival", "tinytex", "utf8", "vctrs", "withr"))
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/UMich/Fall23/EAS648/Repo/Lab/01")
library(ggplot2)
library(ggplot2)
library(sf)
library(ggplot2)
library(sf)
library(tidyverse)
boulder = st_read("Data/BoulderSocialMedia.shp")
boulder = st_read("Data/BoulderSocialMedia.shp")
head(boulder)
ggplot() +
geom_sf(data =boulder, fill = NA, alpha = .2) +
theme_bw()
#library(dplyer)
boulder %>%
mutate(high_elev = ifelse(PT_Elev >= 2200, TRUE, FALSE))%>%
ggplot() +
geom_sf(aes(color=high_elev),
fill = NA, alpha = .2)  +
theme_bw()
ggplot() +
geom_sf(data = boulder, aes(color=PT_Elev),
fill = NA, alpha = .2) +
scale_colour_gradientn(colours = magma(10))
library(sf)
library(ggspatial)
library(viridis)
ggplot() +
geom_sf(data = boulder, aes(color=PT_Elev),
fill = NA, alpha = .2) +
scale_colour_gradientn(colours = magma(10))
summary(boulder$DB)
p <- ggplot() +
annotation_spatial(boulder) +
layer_spatial(boulder, aes(col = DB))
p + scale_color_brewer(palette = "Dark2")
library(tmap)
## Add the data - these are specific to the vector or raster
tm_shape(boulder) +
## which variable, is there a class interval, palette, and other options
tm_symbols(col='PT_Elev',
style='quantile',
palette = 'YlOrRd',
border.lwd = NA,
size = 0.1)
# tmap_mode("plot")
data("World")
tm_shape(World) +
tm_polygons("gdp_cap_est", style='quantile', legend.title = "GDP Per Capita Estimate")
