#
# combined_plot <- plot_grid(main_plot, annotation_plot, ncol = 1, rel_heights = c(1, 0.1))
#
# print(combined_plot)
# Step 1: create a new column indicating the nearest POI type
main_plot = boulder %>%
mutate(
near_poi = case_when(
Climb_dist <= 10 ~ "Climing Wall",
NatMrk_Dis <= 10 ~ "Natural Landmark",
PrarDg_Dis <= 10 ~ "Praire Dog Mounds",
TRUE ~ "Other")
)%>%
ggplot() +
geom_sf(aes(color=near_poi),
fill = NA)  +
# adding title
ggtitle("Tourist Map of Interest in Boulder, Colorado") +
# altering the legend title
labs(color = "POI In 10 Meters:") +
# adding scale bar
annotation_scale(location = "br", width_hint = 0.5) +
# adding north arrow
annotation_north_arrow(location = "tr", which_north = "true",
style = north_arrow_fancy_orienteering()) +
# adding author, Datum, date
# annotation_custom(
#   grob = textGrob(label =
#                     "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023",
#                   hjust=1, vjust=0, gp=gpar(fontsize=8)), xmin = Inf, ymin = Inf
#   ) +
theme_bw()
# 创建注释grobs
label_text <- "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"
text_grob <- textGrob(label = label_text,
hjust = 1, vjust = 0,
gp = gpar(fontsize = 4))
text_grob <- editGrob(text_grob,x = unit(1, "npc"), y = unit(0.5, "npc"))
# 添加注释到主图
main_plot <- main_plot +
annotation_custom(grob = text_grob)
# 打印带有注释的地图
print(main_plot)
# annotation_plot = ggplot() +
#     geom_text(aes(1, 0,
#                 label = "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"),
#             hjust = 0, vjust = 0) +
#   theme_void()
#
# spacer_plot <- ggplot() + theme_void()
#
# annotation_plot = plot_grid(spacer_plot, annotation_plot, ncol = 2, rel_widths = c(0.7, 0.3))
#
# combined_plot <- plot_grid(main_plot, annotation_plot, ncol = 1, rel_heights = c(1, 0.1))
#
# print(combined_plot)
# Step 1: create a new column indicating the nearest POI type
main_plot = boulder %>%
mutate(
near_poi = case_when(
Climb_dist <= 10 ~ "Climing Wall",
NatMrk_Dis <= 10 ~ "Natural Landmark",
PrarDg_Dis <= 10 ~ "Praire Dog Mounds",
TRUE ~ "Other")
)%>%
ggplot() +
geom_sf(aes(color=near_poi),
fill = NA)  +
# adding title
ggtitle("Tourist Map of Interest in Boulder, Colorado") +
# altering the legend title
labs(color = "POI In 10 Meters:") +
# adding scale bar
annotation_scale(location = "br", width_hint = 0.5) +
# adding north arrow
annotation_north_arrow(location = "tr", which_north = "true",
style = north_arrow_fancy_orienteering()) +
# adding author, Datum, date
# annotation_custom(
#   grob = textGrob(label =
#                     "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023",
#                   hjust=1, vjust=0, gp=gpar(fontsize=8)), xmin = Inf, ymin = Inf
#   ) +
theme_bw()
# 创建注释grobs
label_text <- "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"
text_grob <- textGrob(label = label_text,
hjust = 1, vjust = 0,
gp = gpar(fontsize = 4))
text_grob <- editGrob(text_grob,x = unit(1, "npc"), y = unit(0.2, "npc"))
# 添加注释到主图
main_plot <- main_plot +
annotation_custom(grob = text_grob)
# 打印带有注释的地图
print(main_plot)
# annotation_plot = ggplot() +
#     geom_text(aes(1, 0,
#                 label = "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"),
#             hjust = 0, vjust = 0) +
#   theme_void()
#
# spacer_plot <- ggplot() + theme_void()
#
# annotation_plot = plot_grid(spacer_plot, annotation_plot, ncol = 2, rel_widths = c(0.7, 0.3))
#
# combined_plot <- plot_grid(main_plot, annotation_plot, ncol = 1, rel_heights = c(1, 0.1))
#
# print(combined_plot)
# Step 1: create a new column indicating the nearest POI type
main_plot = boulder %>%
mutate(
near_poi = case_when(
Climb_dist <= 10 ~ "Climing Wall",
NatMrk_Dis <= 10 ~ "Natural Landmark",
PrarDg_Dis <= 10 ~ "Praire Dog Mounds",
TRUE ~ "Other")
)%>%
ggplot() +
geom_sf(aes(color=near_poi),
fill = NA)  +
# adding title
ggtitle("Tourist Map of Interest in Boulder, Colorado") +
# altering the legend title
labs(color = "POI In 10 Meters:") +
# adding scale bar
annotation_scale(location = "br", width_hint = 0.5) +
# adding north arrow
annotation_north_arrow(location = "tr", which_north = "true",
style = north_arrow_fancy_orienteering()) +
# adding author, Datum, date
# annotation_custom(
#   grob = textGrob(label =
#                     "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023",
#                   hjust=1, vjust=0, gp=gpar(fontsize=8)), xmin = Inf, ymin = Inf
#   ) +
theme_bw()
# Create grobs annotation
label_text <- "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"
text_grob <- textGrob(label = label_text,
hjust = 1, vjust = 0,
gp = gpar(fontsize = 4))
text_grob <- editGrob(text_grob,x = unit(1, "npc"), y = unit(0.1, "npc"))
# adding annotaion to main plot
main_plot <- main_plot +
annotation_custom(grob = text_grob)
# print the map with annotation
print(main_plot)
# annotation_plot = ggplot() +
#     geom_text(aes(1, 0,
#                 label = "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"),
#             hjust = 0, vjust = 0) +
#   theme_void()
#
# spacer_plot <- ggplot() + theme_void()
#
# annotation_plot = plot_grid(spacer_plot, annotation_plot, ncol = 2, rel_widths = c(0.7, 0.3))
#
# combined_plot <- plot_grid(main_plot, annotation_plot, ncol = 1, rel_heights = c(1, 0.1))
#
# print(combined_plot)
# Step 1: create a new column indicating the nearest POI type
main_plot = boulder %>%
mutate(
near_poi = case_when(
Climb_dist <= 10 ~ "Climing Wall",
NatMrk_Dis <= 10 ~ "Natural Landmark",
PrarDg_Dis <= 10 ~ "Praire Dog Mounds",
TRUE ~ "Other")
)%>%
ggplot() +
geom_sf(aes(color=near_poi),
fill = NA)  +
# adding title
ggtitle("Tourist Map of Interest in Boulder, Colorado") +
# altering the legend title
labs(color = "POI In 10 Meters:") +
# adding scale bar
annotation_scale(location = "br", width_hint = 0.5) +
# adding north arrow
annotation_north_arrow(location = "tr", which_north = "true",
style = north_arrow_fancy_orienteering()) +
# adding author, Datum, date
# annotation_custom(
#   grob = textGrob(label =
#                     "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023",
#                   hjust=1, vjust=0, gp=gpar(fontsize=8)), xmin = Inf, ymin = Inf
#   ) +
theme_bw()
# Create grobs annotation
label_text <- "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"
text_grob <- textGrob(label = label_text,
hjust = 1, vjust = 0,
gp = gpar(fontsize = 4))
text_grob <- editGrob(text_grob,x = unit(1, "npc"), y = unit(0.08, "npc"))
# adding annotaion to main plot
main_plot <- main_plot +
annotation_custom(grob = text_grob)
# print the map with annotation
print(main_plot)
# annotation_plot = ggplot() +
#     geom_text(aes(1, 0,
#                 label = "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"),
#             hjust = 0, vjust = 0) +
#   theme_void()
#
# spacer_plot <- ggplot() + theme_void()
#
# annotation_plot = plot_grid(spacer_plot, annotation_plot, ncol = 2, rel_widths = c(0.7, 0.3))
#
# combined_plot <- plot_grid(main_plot, annotation_plot, ncol = 1, rel_heights = c(1, 0.1))
#
# print(combined_plot)
# Step 1: create a new column indicating the nearest POI type
main_plot = boulder %>%
mutate(
near_poi = case_when(
Climb_dist <= 10 ~ "Climing Wall",
NatMrk_Dis <= 10 ~ "Natural Landmark",
PrarDg_Dis <= 10 ~ "Praire Dog Mounds",
TRUE ~ "Other")
)%>%
ggplot() +
geom_sf(aes(color=near_poi),
fill = NA)  +
# adding title
ggtitle("Tourist Map of Interest in Boulder, Colorado") +
# altering the legend title
labs(color = "POI In 10 Meters:") +
# adding scale bar
annotation_scale(location = "br", width_hint = 0.5) +
# adding north arrow
annotation_north_arrow(location = "tr", which_north = "true",
style = north_arrow_fancy_orienteering()) +
# adding author, Datum, date
# annotation_custom(
#   grob = textGrob(label =
#                     "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023",
#                   hjust=1, vjust=0, gp=gpar(fontsize=8)), xmin = Inf, ymin = Inf
#   ) +
theme_bw()
# Create grobs annotation
label_text <- "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"
text_grob <- textGrob(label = label_text,
hjust = 1, vjust = 0,
gp = gpar(fontsize = 4))
text_grob <- editGrob(text_grob,x = unit(0.98, "npc"), y = unit(0.08, "npc"))
# adding annotaion to main plot
main_plot <- main_plot +
annotation_custom(grob = text_grob)
# print the map with annotation
print(main_plot)
# annotation_plot = ggplot() +
#     geom_text(aes(1, 0,
#                 label = "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"),
#             hjust = 0, vjust = 0) +
#   theme_void()
#
# spacer_plot <- ggplot() + theme_void()
#
# annotation_plot = plot_grid(spacer_plot, annotation_plot, ncol = 2, rel_widths = c(0.7, 0.3))
#
# combined_plot <- plot_grid(main_plot, annotation_plot, ncol = 1, rel_heights = c(1, 0.1))
#
# print(combined_plot)
boulder_pairs = subset(boulder[1:1000, c("Climb_dist", "NatMrk_Dis", "PrarDg_Dis")])
boulder_pairs = st_set_geometry(boulder_pairs, NULL)
pairs(boulder_pairs)
boulder_pairs = subset(boulder[, c("Climb_dist", "NatMrk_Dis", "PrarDg_Dis")])
boulder_pairs = st_set_geometry(boulder_pairs, NULL)
pairs(boulder_pairs)
boulder_pairs = st_set_geometry(boulder_pairs, NULL) %>% sample_n(2000)
boulder_pairs = subset(boulder[, c("Climb_dist", "NatMrk_Dis", "PrarDg_Dis")])
boulder_pairs = st_set_geometry(boulder_pairs, NULL) %>% sample_n(2000)
pairs(boulder_pairs)
# Creating a pair plot for visualizing the relation ship between elevation, distance to natural landmark, distance to lakes, rivers and creeks and 	distance to streets and parking lots
boulder_pairs = subset(boulder[, c("Climb_dist", "NatMrk_Dis", "PrarDg_Dis")])
boulder_pairs = st_set_geometry(boulder_pairs, NULL) %>% sample_n(2000)
pairs(boulder_pairs)
# Creating a pair plot for visualizing the relation ship between elevation, distance to natural landmark, distance to lakes, rivers and creeks and 	distance to streets and parking lots
boulder_pairs = subset(boulder[, c("Climb_dist", "NatMrk_Dis", "PrarDg_Dis")])
boulder_pairs = st_set_geometry(boulder_pairs, NULL) %>% sample_n(2000)
pairs(boulder_pairs)
# Step 1: create a new column indicating the nearest POI type
main_plot = boulder %>%
mutate(
near_poi = case_when(
Climb_dist <= 10 ~ "Climing Wall",
NatMrk_Dis <= 10 ~ "Natural Landmark",
PrarDg_Dis <= 10 ~ "Praire Dog Mounds",
TRUE ~ "Other")
)%>%
# using ggplot to plot the map
ggplot() +
geom_sf(aes(color=near_poi),
fill = NA)  +
# adding title
ggtitle("Tourist Map of Interest in Boulder, Colorado") +
# altering the legend title
labs(color = "POI In 10 Meters:") +
# adding scale bar
annotation_scale(location = "br", width_hint = 0.5) +
# adding north arrow
annotation_north_arrow(location = "tr", which_north = "true",
style = north_arrow_fancy_orienteering()) +
# adding theme: bw
theme_bw()
# Create grobs annotation
label_text <- "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"
text_grob <- textGrob(label = label_text,
hjust = 1, vjust = 0,
gp = gpar(fontsize = 4))
text_grob <- editGrob(text_grob,x = unit(0.99, "npc"), y = unit(0.08, "npc"))
# adding annotaion to main plot
main_plot <- main_plot +
annotation_custom(grob = text_grob)
# print the map with annotation
print(main_plot)
# Step 1: create a new column to score the attraction
main_plot = boulder %>%
mutate(attr_score = 10 * ifelse(Climb_dist < 10, 1, 0) +
10 * ifelse(NatMrk_Dis < 10, 1, 0) +
10 * ifelse(PrarDg_Dis < 10, 1, 0)
)%>%
# using ggplot to plot the map
ggplot() +
geom_sf(aes(color=attr_score),
fill = NA)  +
# adding title
ggtitle("Attraction Score in Boulder, Colorado") +
# altering the legend title
labs(color = "Score") +
# adding scale bar
annotation_scale(location = "br", width_hint = 0.5) +
# adding north arrow
annotation_north_arrow(location = "tr", which_north = "true",
style = north_arrow_fancy_orienteering()) +
# adding theme: bw
theme_bw()
# Create grobs annotation
label_text <- "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD_1983_Albers\nDate: 10/29/2023"
text_grob <- textGrob(label = label_text,
hjust = 1, vjust = 0,
gp = gpar(fontsize = 4))
text_grob <- editGrob(text_grob,x = unit(0.99, "npc"), y = unit(0.08, "npc"))
# adding annotaion to main plot
main_plot <- main_plot +
annotation_custom(grob = text_grob)
# print the map with annotation
print(main_plot)
boulder %>%
filter(DB ==  'Pano' | DB == 'Flickr') %>%
ggplot(aes(x=DB, y=Street_dis)) +
geom_boxplot()
boulder %>%
mutate(attr_score = 10 * ifelse(Climb_dist < 10, 1, 0) +
10 * ifelse(NatMrk_Dis < 10, 1, 0) +
10 * ifelse(PrarDg_Dis < 10, 1, 0)
)%>%
filter(DB ==  'Pano' | DB == 'Flickr') %>%
ggplot(aes(x=DB, y=attr_score)) +
geom_boxplot()
boulder %>%
mutate(attr_score = 10 * ifelse(Climb_dist < 10, 1, 0) +
10 * ifelse(NatMrk_Dis < 10, 1, 0) +
10 * ifelse(PrarDg_Dis < 10, 1, 0)
)%>%
ggplot(aes(x=DB, y=attr_score)) +
geom_boxplot()
# Step 1: create a new column indicating the nearest POI type
main_plot = boulder %>%
mutate(
near_poi = case_when(
Climb_dist <= 50 ~ "Climing Wall",
NatMrk_Dis <= 50 ~ "Natural Landmark",
PrarDg_Dis <= 50 ~ "Prairie Dog Mounds",
TRUE ~ "Other")
)%>%
# using ggplot to plot the map
ggplot() +
geom_sf(aes(color=near_poi),
fill = NA)  +
# adding title
ggtitle("Tourist Map of Interest in Boulder, Colorado") +
# altering the legend title
labs(color = "POI In 10 Meters:") +
# adding scale bar
annotation_scale(location = "br", width_hint = 0.5) +
# adding north arrow
annotation_north_arrow(location = "tr", which_north = "true",
style = north_arrow_fancy_orienteering()) +
# adding theme: bw
theme_bw()
# Create grobs annotation
label_text <- "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD27/Colorado North\nDate: 10/29/2023"
text_grob <- textGrob(label = label_text,
hjust = 1, vjust = 0,
gp = gpar(fontsize = 4))
text_grob <- editGrob(text_grob,x = unit(0.99, "npc"), y = unit(0.08, "npc"))
# adding annotaion to main plot
main_plot <- main_plot +
annotation_custom(grob = text_grob)
# print the map with annotation
print(main_plot)
# Step 2: create a new column to score the attractiveness
main_plot = boulder %>%
mutate(attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0)
)%>%
# using ggplot to plot the map
ggplot() +
geom_sf(aes(color=attr_score),
fill = NA)  +
# adding title
ggtitle("attractiveness Score in Boulder, Colorado") +
# altering the legend title
labs(color = "Score") +
# adding scale bar
annotation_scale(location = "br", width_hint = 0.5) +
# adding north arrow
annotation_north_arrow(location = "tr", which_north = "true",
style = north_arrow_fancy_orienteering()) +
# adding theme: bw
theme_bw()
# Create grobs annotation
label_text <- "Author: Haolin Li\nGCS: NAD 1983\nPCS: NAD27/Colorado North\nDate: 10/29/2023"
text_grob <- textGrob(label = label_text,
hjust = 1, vjust = 0,
gp = gpar(fontsize = 4))
text_grob <- editGrob(text_grob,x = unit(0.99, "npc"), y = unit(0.08, "npc"))
# adding annotaion to main plot
main_plot <- main_plot +
annotation_custom(grob = text_grob)
# print the map with annotation
print(main_plot)
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
counts <- boulder %>%
mutate(attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0)
)%>%
table(boulder$attr_score)
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
counts <- boulder %>%
mutate(attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0)
)%>%
table(attr_score)
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
counts <- boulder %>%
mutate(attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0)
)%>%
table()
View(boulder)
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
counts <- boulder %>%
mutate(attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0)
)
View(counts)
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
counts = boulder %>%
mutate(attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0)
)$attr_score
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
counts = mutate(boulder, attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0))
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
counts = mutate(boulder, attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0))$attr_score
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
counts = mutate(boulder, attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0))$attr_score
pie(table(counts), main = "Pie Chart of attr_score", labels = names(counts))
names(counts)
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
counts = mutate(boulder, attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0))$attr_score
pie(table(counts), main = "Pie Chart of attr_score", labels = names(table(counts))
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
counts = table(mutate(boulder, attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0))$attr_score)
pie(counts, main = "Pie Chart of attr_score", labels = names(counts))
# Creating a pie chart to visualize the distribution of the score
# 假设您的数据框叫df
as_counts = table(mutate(boulder, attr_score = 10 * ifelse(Climb_dist < 50, 1, 0) +
10 * ifelse(NatMrk_Dis < 50, 1, 0) +
10 * ifelse(PrarDg_Dis < 50, 1, 0))$attr_score)
as_proportions = as_counts / sum(as_counts)
as_labels = paste(names(as_proportions), ": ", round(as_proportions*100, 2), "%", sep="")
pie(as_counts, main = "Pie Chart of Attractiveness Score", labels = as_labels)
